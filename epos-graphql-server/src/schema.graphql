# import Post from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post!
  me: User
  users: [User!]!
  user(id: ID!): User 
  allOrders: [Order!]!
  customerOrders(id: ID!): [Order!]!
  payForOrder(id: ID!): Post
  customers: [Customer!]!
  customer(id: ID!): Customer
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  createCustomer(first: String!, last: String!,
  street: String, city: String, state: String, zip: String, cardNum: String): Customer!
  orders: [Order!]!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}

type Customer implements Node {
  id: ID!
  first: String!
  last: String!
  street: String
  city: String
  state: String
  zip: String
  cardNum: String
  orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order!]
}

